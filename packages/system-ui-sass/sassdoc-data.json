[
  {
    "description": "Set background-size property\n\n",
    "commentRange": {
      "start": 5,
      "end": 11
    },
    "context": {
      "type": "css",
      "name": ".bg-size-[type]",
      "value": "background-size: [value]",
      "line": {
        "start": 14,
        "end": 17
      }
    },
    "see": [
      {
        "description": "generate-variants\n",
        "context": {
          "type": "mixin",
          "name": "generate-variants",
          "code": "\n  // Loop over each breakpoint\n  @each $breakpoint in map-keys($grid-breakpoints) {\n    @include media-breakpoint-up($breakpoint) {\n      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n      // Loop over each values in map\n      @each $key, $value in $values {\n        @if type-of($property) != \"string\" {\n          .#{$classname}#{$infix}-#{$key} {\n            @each $prop in $property {\n              #{$prop}: set-unit($key, $value, $unit, $important);\n            }\n          }\n        } @else {\n          .#{$classname}#{$infix}-#{$key} {\n            #{$property}: set-unit($key, $value, $unit, $important);\n          }\n        }\n      }\n    }\n  }\n",
          "line": {
            "start": 2,
            "end": 30
          }
        }
      }
    ],
    "example": [
      {
        "type": "scss",
        "code": ".bg-size-auto, .bg-size-xxl-cover"
      }
    ],
    "group": ["background"],
    "access": "public",
    "file": {
      "path": "_background.scss",
      "name": "_background.scss"
    }
  },
  {
    "description": "Add radius on all sides\n\nCheck [theme.js](https://github.com/Mill3/mill3-packages/blob/master/packages/system-ui-sass/theme.js) for available values.\n\n",
    "commentRange": {
      "start": 5,
      "end": 13
    },
    "context": {
      "type": "css",
      "name": ".radius-[size]",
      "value": "border-radius: [value]",
      "line": {
        "start": 16,
        "end": 121
      }
    },
    "see": [
      {
        "description": "generate-variants\n",
        "context": {
          "type": "mixin",
          "name": "generate-variants",
          "code": "\n  // Loop over each breakpoint\n  @each $breakpoint in map-keys($grid-breakpoints) {\n    @include media-breakpoint-up($breakpoint) {\n      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n      // Loop over each values in map\n      @each $key, $value in $values {\n        @if type-of($property) != \"string\" {\n          .#{$classname}#{$infix}-#{$key} {\n            @each $prop in $property {\n              #{$prop}: set-unit($key, $value, $unit, $important);\n            }\n          }\n        } @else {\n          .#{$classname}#{$infix}-#{$key} {\n            #{$property}: set-unit($key, $value, $unit, $important);\n          }\n        }\n      }\n    }\n  }\n",
          "line": {
            "start": 2,
            "end": 30
          }
        }
      }
    ],
    "example": [
      {
        "type": "scss",
        "code": ".radius-10, .radius-xl-20"
      }
    ],
    "group": ["border-radius"],
    "access": "public",
    "file": {
      "path": "_border-radius.scss",
      "name": "_border-radius.scss"
    }
  },
  {
    "description": "Add radius top left\n\nCheck [theme.js](https://github.com/Mill3/mill3-packages/blob/master/packages/system-ui-sass/theme.js) for available values.\n\n",
    "commentRange": {
      "start": 20,
      "end": 28
    },
    "context": {
      "type": "css",
      "name": ".radius-tl-[size]",
      "value": "border-top-left-radius: [value]",
      "line": {
        "start": 31,
        "end": 121
      }
    },
    "see": [
      {
        "description": "generate-variants\n",
        "context": {
          "type": "mixin",
          "name": "generate-variants",
          "code": "\n  // Loop over each breakpoint\n  @each $breakpoint in map-keys($grid-breakpoints) {\n    @include media-breakpoint-up($breakpoint) {\n      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n      // Loop over each values in map\n      @each $key, $value in $values {\n        @if type-of($property) != \"string\" {\n          .#{$classname}#{$infix}-#{$key} {\n            @each $prop in $property {\n              #{$prop}: set-unit($key, $value, $unit, $important);\n            }\n          }\n        } @else {\n          .#{$classname}#{$infix}-#{$key} {\n            #{$property}: set-unit($key, $value, $unit, $important);\n          }\n        }\n      }\n    }\n  }\n",
          "line": {
            "start": 2,
            "end": 30
          }
        }
      }
    ],
    "example": [
      {
        "type": "scss",
        "code": ".radius-tl-10, .radius-tl-xl-20"
      }
    ],
    "group": ["border-radius"],
    "access": "public",
    "file": {
      "path": "_border-radius.scss",
      "name": "_border-radius.scss"
    }
  },
  {
    "description": "Add radius top right\n\nCheck [theme.js](https://github.com/Mill3/mill3-packages/blob/master/packages/system-ui-sass/theme.js) for available values.\n\n",
    "commentRange": {
      "start": 35,
      "end": 43
    },
    "context": {
      "type": "css",
      "name": ".radius-tr-[size]",
      "value": "border-top-right-radius: [value]",
      "line": {
        "start": 46,
        "end": 121
      }
    },
    "see": [
      {
        "description": "generate-variants\n",
        "context": {
          "type": "mixin",
          "name": "generate-variants",
          "code": "\n  // Loop over each breakpoint\n  @each $breakpoint in map-keys($grid-breakpoints) {\n    @include media-breakpoint-up($breakpoint) {\n      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n      // Loop over each values in map\n      @each $key, $value in $values {\n        @if type-of($property) != \"string\" {\n          .#{$classname}#{$infix}-#{$key} {\n            @each $prop in $property {\n              #{$prop}: set-unit($key, $value, $unit, $important);\n            }\n          }\n        } @else {\n          .#{$classname}#{$infix}-#{$key} {\n            #{$property}: set-unit($key, $value, $unit, $important);\n          }\n        }\n      }\n    }\n  }\n",
          "line": {
            "start": 2,
            "end": 30
          }
        }
      }
    ],
    "example": [
      {
        "type": "scss",
        "code": ".radius-tr-10, .radius-tr-xl-20"
      }
    ],
    "group": ["border-radius"],
    "access": "public",
    "file": {
      "path": "_border-radius.scss",
      "name": "_border-radius.scss"
    }
  },
  {
    "description": "Add radius bottom left\n\nCheck [theme.js](https://github.com/Mill3/mill3-packages/blob/master/packages/system-ui-sass/theme.js) for available values.\n\n",
    "commentRange": {
      "start": 50,
      "end": 58
    },
    "context": {
      "type": "css",
      "name": ".radius-bl-[size]",
      "value": "border-bottom-left-radius: [value]",
      "line": {
        "start": 61,
        "end": 121
      }
    },
    "see": [
      {
        "description": "generate-variants\n",
        "context": {
          "type": "mixin",
          "name": "generate-variants",
          "code": "\n  // Loop over each breakpoint\n  @each $breakpoint in map-keys($grid-breakpoints) {\n    @include media-breakpoint-up($breakpoint) {\n      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n      // Loop over each values in map\n      @each $key, $value in $values {\n        @if type-of($property) != \"string\" {\n          .#{$classname}#{$infix}-#{$key} {\n            @each $prop in $property {\n              #{$prop}: set-unit($key, $value, $unit, $important);\n            }\n          }\n        } @else {\n          .#{$classname}#{$infix}-#{$key} {\n            #{$property}: set-unit($key, $value, $unit, $important);\n          }\n        }\n      }\n    }\n  }\n",
          "line": {
            "start": 2,
            "end": 30
          }
        }
      }
    ],
    "example": [
      {
        "type": "scss",
        "code": ".radius-bl-10, .radius-bl-xl-20"
      }
    ],
    "group": ["border-radius"],
    "access": "public",
    "file": {
      "path": "_border-radius.scss",
      "name": "_border-radius.scss"
    }
  },
  {
    "description": "Add radius bottom right\n\nCheck [theme.js](https://github.com/Mill3/mill3-packages/blob/master/packages/system-ui-sass/theme.js) for available values.\n\n",
    "commentRange": {
      "start": 65,
      "end": 73
    },
    "context": {
      "type": "css",
      "name": ".radius-br-[size]",
      "value": "border-bottom-right-radius: [value]",
      "line": {
        "start": 76,
        "end": 121
      }
    },
    "see": [
      {
        "description": "generate-variants\n",
        "context": {
          "type": "mixin",
          "name": "generate-variants",
          "code": "\n  // Loop over each breakpoint\n  @each $breakpoint in map-keys($grid-breakpoints) {\n    @include media-breakpoint-up($breakpoint) {\n      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n      // Loop over each values in map\n      @each $key, $value in $values {\n        @if type-of($property) != \"string\" {\n          .#{$classname}#{$infix}-#{$key} {\n            @each $prop in $property {\n              #{$prop}: set-unit($key, $value, $unit, $important);\n            }\n          }\n        } @else {\n          .#{$classname}#{$infix}-#{$key} {\n            #{$property}: set-unit($key, $value, $unit, $important);\n          }\n        }\n      }\n    }\n  }\n",
          "line": {
            "start": 2,
            "end": 30
          }
        }
      }
    ],
    "example": [
      {
        "type": "scss",
        "code": ".radius-br-10, .radius-br-xl-20"
      }
    ],
    "group": ["border-radius"],
    "access": "public",
    "file": {
      "path": "_border-radius.scss",
      "name": "_border-radius.scss"
    }
  },
  {
    "description": "Add radius top sides\n\nCheck [theme.js](https://github.com/Mill3/mill3-packages/blob/master/packages/system-ui-sass/theme.js) for available values.\n\n",
    "commentRange": {
      "start": 84,
      "end": 92
    },
    "context": {
      "type": "css",
      "name": ".radius-t-[size]",
      "value": "border-top-left-radius: [value]; border-top-right-radius: [value];",
      "line": {
        "start": 95,
        "end": 121
      }
    },
    "see": [
      {
        "description": "generate-variants\n",
        "context": {
          "type": "mixin",
          "name": "generate-variants",
          "code": "\n  // Loop over each breakpoint\n  @each $breakpoint in map-keys($grid-breakpoints) {\n    @include media-breakpoint-up($breakpoint) {\n      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n      // Loop over each values in map\n      @each $key, $value in $values {\n        @if type-of($property) != \"string\" {\n          .#{$classname}#{$infix}-#{$key} {\n            @each $prop in $property {\n              #{$prop}: set-unit($key, $value, $unit, $important);\n            }\n          }\n        } @else {\n          .#{$classname}#{$infix}-#{$key} {\n            #{$property}: set-unit($key, $value, $unit, $important);\n          }\n        }\n      }\n    }\n  }\n",
          "line": {
            "start": 2,
            "end": 30
          }
        }
      }
    ],
    "example": [
      {
        "type": "scss",
        "code": ".radius-t-10, .radius-t-xl-20"
      }
    ],
    "group": ["border-radius"],
    "access": "public",
    "file": {
      "path": "_border-radius.scss",
      "name": "_border-radius.scss"
    }
  },
  {
    "description": "Add radius bottom sides\n\nCheck [theme.js](https://github.com/Mill3/mill3-packages/blob/master/packages/system-ui-sass/theme.js) for available values.\n\n",
    "commentRange": {
      "start": 103,
      "end": 111
    },
    "context": {
      "type": "css",
      "name": ".radius-b-[size]",
      "value": "border-bottom-left-radius: [value]; border-bottom-right-radius: [value];",
      "line": {
        "start": 114,
        "end": 121
      }
    },
    "see": [
      {
        "description": "generate-variants\n",
        "context": {
          "type": "mixin",
          "name": "generate-variants",
          "code": "\n  // Loop over each breakpoint\n  @each $breakpoint in map-keys($grid-breakpoints) {\n    @include media-breakpoint-up($breakpoint) {\n      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n      // Loop over each values in map\n      @each $key, $value in $values {\n        @if type-of($property) != \"string\" {\n          .#{$classname}#{$infix}-#{$key} {\n            @each $prop in $property {\n              #{$prop}: set-unit($key, $value, $unit, $important);\n            }\n          }\n        } @else {\n          .#{$classname}#{$infix}-#{$key} {\n            #{$property}: set-unit($key, $value, $unit, $important);\n          }\n        }\n      }\n    }\n  }\n",
          "line": {
            "start": 2,
            "end": 30
          }
        }
      }
    ],
    "example": [
      {
        "type": "scss",
        "code": ".radius-b-10, .radius-b-xl-20"
      }
    ],
    "group": ["border-radius"],
    "access": "public",
    "file": {
      "path": "_border-radius.scss",
      "name": "_border-radius.scss"
    }
  },
  {
    "description": "Add a box-shadow\n\nCheck [theme.js](https://github.com/Mill3/mill3-packages/blob/master/packages/system-ui-sass/theme.js) for available values.\n\n",
    "commentRange": {
      "start": 5,
      "end": 13
    },
    "context": {
      "type": "css",
      "name": ".box-shadow-[size]",
      "value": "box-shadow: 0 14px 14px rgba(0,0,0,0.35)",
      "line": {
        "start": 16,
        "end": 19
      }
    },
    "see": [
      {
        "description": "generate-variants\n",
        "context": {
          "type": "mixin",
          "name": "generate-variants",
          "code": "\n  // Loop over each breakpoint\n  @each $breakpoint in map-keys($grid-breakpoints) {\n    @include media-breakpoint-up($breakpoint) {\n      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n      // Loop over each values in map\n      @each $key, $value in $values {\n        @if type-of($property) != \"string\" {\n          .#{$classname}#{$infix}-#{$key} {\n            @each $prop in $property {\n              #{$prop}: set-unit($key, $value, $unit, $important);\n            }\n          }\n        } @else {\n          .#{$classname}#{$infix}-#{$key} {\n            #{$property}: set-unit($key, $value, $unit, $important);\n          }\n        }\n      }\n    }\n  }\n",
          "line": {
            "start": 2,
            "end": 30
          }
        }
      }
    ],
    "example": [
      {
        "type": "scss",
        "code": ".box-shadow-1, .box-shadow-xl-2"
      }
    ],
    "group": ["box-shadow"],
    "access": "public",
    "file": {
      "path": "_box-shadow.scss",
      "name": "_box-shadow.scss"
    }
  },
  {
    "description": "Generate responsive boxes container with various height ratio\n\nCheck [theme.js](https://github.com/Mill3/mill3-packages/blob/master/packages/system-ui-sass/theme.js) for available values.\n\n",
    "commentRange": {
      "start": 5,
      "end": 14
    },
    "context": {
      "type": "css",
      "name": ".box-[size]",
      "value": "...",
      "line": {
        "start": 17,
        "end": 20
      }
    },
    "see": [
      {
        "description": "generate-boxes\n",
        "context": {
          "type": "mixin",
          "name": "generate-boxes",
          "code": "\n  // Loop over each breakpoint\n  @each $breakpoint in map-keys($grid-breakpoints) {\n    @include media-breakpoint-up($breakpoint) {\n      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n      @each $key, $value in $boxes {\n        .box#{$infix}-#{$key} {\n          display: block;\n          position: relative;\n\n          &:before {\n            content: \"\";\n            display: block;\n            padding-top: $value;\n          }\n\n          > .box-content {\n            display: block;\n            position: absolute;\n            left: 0;\n            top: 0;\n            width: 100%;\n            height: 100%;\n            z-index: 2;\n          }\n        }\n      }\n    }\n  }\n",
          "line": {
            "start": 2,
            "end": 32
          }
        }
      }
    ],
    "example": [
      {
        "type": "scss",
        "code": "<figure class=\"box-square\"><picture class=\"box-content\">[box content starts here]</picture></figure>"
      }
    ],
    "group": ["boxes"],
    "access": "public",
    "file": {
      "path": "_boxes.scss",
      "name": "_boxes.scss"
    }
  },
  {
    "description": "Color classes for changing color or background-color of an element, native CSS variables are also available, check both examples below.\n\nCheck [theme.js](https://github.com/Mill3/mill3-packages/blob/master/packages/system-ui-sass/theme.js) for available values.\n\n",
    "commentRange": {
      "start": 5,
      "end": 19
    },
    "context": {
      "type": "css",
      "name": ".color-[value], .bg-color-[value]",
      "value": "...",
      "line": {
        "start": 22,
        "end": 32
      }
    },
    "see": [
      {
        "description": "color-classes\n",
        "context": {
          "type": "mixin",
          "name": "color-classes",
          "code": "\n  .color-#{$color} {\n    color: var(--color-#{$color});\n  }\n\n  .bg-#{$color},\n  .background-#{$color},\n  .background-color--#{$color} {\n    background-color: var(--color-#{$color});\n  }\n\n  // TODO: move this in a border module/mixins\n  .border-color-#{$color} {\n    border-color: var(--color-#{$color});\n  }\n",
          "line": {
            "start": 19,
            "end": 34
          }
        }
      }
    ],
    "example": [
      {
        "type": "scss",
        "code": "<span class=\"bg-color-red\"><span class=\"color-gray-200\"></span></span>"
      },
      {
        "type": "scss",
        "code": ".my-custom-selector {\n  box-shadow: var(--color-red);\n}"
      }
    ],
    "group": ["colors"],
    "access": "public",
    "file": {
      "path": "_colors.scss",
      "name": "_colors.scss"
    }
  },
  {
    "description": "Display classes, block, flex, inline, etc\n\nCheck [theme.js](https://github.com/Mill3/mill3-packages/blob/master/packages/system-ui-sass/theme.js) for available values.\n\n",
    "commentRange": {
      "start": 5,
      "end": 14
    },
    "context": {
      "type": "css",
      "name": ".d-[value]",
      "value": "...",
      "line": {
        "start": 17,
        "end": 20
      }
    },
    "see": [
      {
        "description": "generate-variants\n",
        "context": {
          "type": "mixin",
          "name": "generate-variants",
          "code": "\n  // Loop over each breakpoint\n  @each $breakpoint in map-keys($grid-breakpoints) {\n    @include media-breakpoint-up($breakpoint) {\n      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n      // Loop over each values in map\n      @each $key, $value in $values {\n        @if type-of($property) != \"string\" {\n          .#{$classname}#{$infix}-#{$key} {\n            @each $prop in $property {\n              #{$prop}: set-unit($key, $value, $unit, $important);\n            }\n          }\n        } @else {\n          .#{$classname}#{$infix}-#{$key} {\n            #{$property}: set-unit($key, $value, $unit, $important);\n          }\n        }\n      }\n    }\n  }\n",
          "line": {
            "start": 2,
            "end": 30
          }
        }
      }
    ],
    "example": [
      {
        "type": "scss",
        "code": "<span class=\"d-none d-md-flex\"></span>"
      }
    ],
    "group": ["display"],
    "access": "public",
    "file": {
      "path": "_display.scss",
      "name": "_display.scss"
    }
  },
  {
    "description": "generate-boxes\n",
    "commentRange": {
      "start": 1,
      "end": 1
    },
    "context": {
      "type": "mixin",
      "name": "generate-boxes",
      "code": "\n  // Loop over each breakpoint\n  @each $breakpoint in map-keys($grid-breakpoints) {\n    @include media-breakpoint-up($breakpoint) {\n      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n      @each $key, $value in $boxes {\n        .box#{$infix}-#{$key} {\n          display: block;\n          position: relative;\n\n          &:before {\n            content: \"\";\n            display: block;\n            padding-top: $value;\n          }\n\n          > .box-content {\n            display: block;\n            position: absolute;\n            left: 0;\n            top: 0;\n            width: 100%;\n            height: 100%;\n            z-index: 2;\n          }\n        }\n      }\n    }\n  }\n",
      "line": {
        "start": 2,
        "end": 32
      }
    },
    "access": "public",
    "group": ["undefined"],
    "require": [],
    "file": {
      "path": "_boxes.scss",
      "name": "_boxes.scss"
    }
  },
  {
    "description": "color-css-variables\n",
    "commentRange": {
      "start": 1,
      "end": 1
    },
    "context": {
      "type": "mixin",
      "name": "color-css-variables",
      "code": "\n  :root {\n    @each $color, $value in $colors {\n      // color grouped in theme\n      @if type-of($value) == \"map\" {\n        @each $c, $c_value in $value {\n          --color-#{$c}: #{$c_value};\n        }\n        // first level color values\n      } @else {\n        --color-#{$color}: #{$value};\n      }\n    }\n  }\n",
      "line": {
        "start": 2,
        "end": 16
      }
    },
    "access": "public",
    "group": ["undefined"],
    "require": [],
    "file": {
      "path": "_colors.scss",
      "name": "_colors.scss"
    }
  },
  {
    "description": "color-classes\n",
    "commentRange": {
      "start": 18,
      "end": 18
    },
    "context": {
      "type": "mixin",
      "name": "color-classes",
      "code": "\n  .color-#{$color} {\n    color: var(--color-#{$color});\n  }\n\n  .bg-#{$color},\n  .background-#{$color},\n  .background-color--#{$color} {\n    background-color: var(--color-#{$color});\n  }\n\n  // TODO: move this in a border module/mixins\n  .border-color-#{$color} {\n    border-color: var(--color-#{$color});\n  }\n",
      "line": {
        "start": 19,
        "end": 34
      }
    },
    "access": "public",
    "group": ["undefined"],
    "require": [],
    "file": {
      "path": "_colors.scss",
      "name": "_colors.scss"
    }
  },
  {
    "description": "Remove the unit of a length\n",
    "commentRange": {
      "start": 1,
      "end": 3
    },
    "context": {
      "type": "function",
      "name": "strip-unit",
      "code": "\n  @if type-of($number) == \"number\" and not unitless($number) {\n    @return $number / ($number * 0 + 1);\n  }\n\n  @return $number;\n",
      "line": {
        "start": 5,
        "end": 11
      }
    },
    "parameter": [
      {
        "type": "Number",
        "name": "number",
        "description": "Number to remove unit from"
      }
    ],
    "return": {
      "type": "Number",
      "description": "Unitless number"
    },
    "access": "public",
    "group": ["undefined"],
    "require": [],
    "file": {
      "path": "_units.scss",
      "name": "_units.scss"
    }
  },
  {
    "description": "generate-variants\n",
    "commentRange": {
      "start": 1,
      "end": 1
    },
    "context": {
      "type": "mixin",
      "name": "generate-variants",
      "code": "\n  // Loop over each breakpoint\n  @each $breakpoint in map-keys($grid-breakpoints) {\n    @include media-breakpoint-up($breakpoint) {\n      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n      // Loop over each values in map\n      @each $key, $value in $values {\n        @if type-of($property) != \"string\" {\n          .#{$classname}#{$infix}-#{$key} {\n            @each $prop in $property {\n              #{$prop}: set-unit($key, $value, $unit, $important);\n            }\n          }\n        } @else {\n          .#{$classname}#{$infix}-#{$key} {\n            #{$property}: set-unit($key, $value, $unit, $important);\n          }\n        }\n      }\n    }\n  }\n",
      "line": {
        "start": 2,
        "end": 30
      }
    },
    "access": "public",
    "group": ["undefined"],
    "require": [
      {
        "type": "function",
        "name": "set-unit"
      },
      {
        "type": "function",
        "name": "set-unit"
      }
    ],
    "file": {
      "path": "_variants.scss",
      "name": "_variants.scss"
    }
  },
  {
    "description": "set-unit\n",
    "commentRange": {
      "start": 32,
      "end": 32
    },
    "context": {
      "type": "function",
      "name": "set-unit",
      "code": "\n  // Assign $key to value if empty\n  // this is for theme value using array instead of objects\n  @if $value == null {\n    $value: $key;\n  }\n\n  // append the unit to value unless its set to `auto`\n  @if $value != \"auto\" {\n    $value: #{$value}#{$unit};\n  }\n\n  // append !important flag\n  @if $important {\n    $value: $value unquote(\"!important\");\n  }\n\n  @return $value;\n",
      "line": {
        "start": 33,
        "end": 51
      }
    },
    "access": "public",
    "group": ["undefined"],
    "require": [],
    "file": {
      "path": "_variants.scss",
      "name": "_variants.scss"
    },
    "usedBy": [
      {
        "description": "generate-variants\n",
        "context": {
          "type": "mixin",
          "name": "generate-variants",
          "code": "\n  // Loop over each breakpoint\n  @each $breakpoint in map-keys($grid-breakpoints) {\n    @include media-breakpoint-up($breakpoint) {\n      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n      // Loop over each values in map\n      @each $key, $value in $values {\n        @if type-of($property) != \"string\" {\n          .#{$classname}#{$infix}-#{$key} {\n            @each $prop in $property {\n              #{$prop}: set-unit($key, $value, $unit, $important);\n            }\n          }\n        } @else {\n          .#{$classname}#{$infix}-#{$key} {\n            #{$property}: set-unit($key, $value, $unit, $important);\n          }\n        }\n      }\n    }\n  }\n",
          "line": {
            "start": 2,
            "end": 30
          }
        }
      },
      {
        "description": "generate-variants\n",
        "context": {
          "type": "mixin",
          "name": "generate-variants",
          "code": "\n  // Loop over each breakpoint\n  @each $breakpoint in map-keys($grid-breakpoints) {\n    @include media-breakpoint-up($breakpoint) {\n      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n      // Loop over each values in map\n      @each $key, $value in $values {\n        @if type-of($property) != \"string\" {\n          .#{$classname}#{$infix}-#{$key} {\n            @each $prop in $property {\n              #{$prop}: set-unit($key, $value, $unit, $important);\n            }\n          }\n        } @else {\n          .#{$classname}#{$infix}-#{$key} {\n            #{$property}: set-unit($key, $value, $unit, $important);\n          }\n        }\n      }\n    }\n  }\n",
          "line": {
            "start": 2,
            "end": 30
          }
        }
      }
    ]
  }
]
